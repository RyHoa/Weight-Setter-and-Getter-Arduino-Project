//
//
//

#include <Tiny4kOLED.h>
#include<SPI.h>








float weight = 100;


//set weight
int outA = 3;
int outB = 4;
float temp;
bool currA;
bool currB;
bool prevA = 0; 



float incrementFactor = 5;
int setWeightPin = 2;
volatile bool setWeightFlag = 0;

byte weightLoss;



void setup() 
{
  
  Serial.begin(9600); //set Commns with serial

  //set pins to INPUT pin
  pinMode(outA, INPUT);
  pinMode(outB, INPUT);
  pinMode(setWeightPin, INPUT);

  //ISR command on setWeightPin to call toggleWeight on the RISING edge
  attachInterrupt(digitalPinToInterrupt(setWeightPin), toggleWeight, RISING); 

  //SPI setup
  SPCR |= 0b11000000; //turns on SPIE (enable SPI interrupt), turns on SPE (enables SPI)
  //pinMode(MISO, OUTPUT); //for slave to send Data to master

  oled.begin();
  oled.on();
  oled.clear();
  oled.setFont(FONT8X16);
  oled.clear();
  oled.switchRenderFrame();
  oled.clear();
  oled.switchRenderFrame();
  
  prevA = digitalRead(outA);
}

ISR (SPI_STC_vect) //SPI interrupt routine
{
  weightLoss = SPDR; //read data from the SPI data register
  weight -= weightLoss; //adjust the weight from the data received
}



void loop() 
{
  
  setWeight();
  printOLED();
}

//method to print weight on the LCD screen
void printOLED()
{
  
  

  oled.setCursor(0,0);
  oled.print(weight);
  oled.print(" lbs");  
  Serial.print(weight);
  Serial.println(" lbs");
  //delay(1000);
  //oled.clear();
  //delay(1000);

}

//method to set weight
void setWeight()
{
  if(setWeightFlag)
  {
    //bool to read outA and outB
    
    currA = digitalRead(outA);
    currB = digitalRead(outB);
    Serial.print("currA ");
    Serial.println(currA);
    Serial.print("currB ");
    Serial.println(currB);

    if((currA != prevA) && currA) //if current state is not equal to previous state and outA is high
    {
      if (currB) //if b is "low"
      {
        weight+=incrementFactor; //increment count  
        Serial.println("hi"); 
        delay(20);     
      }
      else if(!currB && (weight - incrementFactor > 0)) //if b is "high" and decrement won't go below 0
      {
        weight-=incrementFactor; //decrement count  
        Serial.println("bye"); 
        delay(20); 
      }        
    }  
  prevA = currA; //current state sent to previous state
  if (temp != weight)
  {
    temp = weight;
    oled.clear();
  }
}
}
void toggleWeight()
{
  setWeightFlag = !setWeightFlag;
  Serial.print("setWeightFlag = ");
  Serial.println(setWeightFlag);
  delay(20);
}